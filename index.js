// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Config = require("./Config.js");
var Handle = require("./Handle.js");
var $$Object = require("./Object.js");
var Security = require("./Security.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

async function handler($$event, param) {
  console.log({
        httpMethod: $$event.httpMethod,
        path: $$event.path,
        headers: $$event.headers
      });
  var post_verified = $$event.httpMethod === "POST" && await Security.Signature.verify($$event);
  console.log("post_verified:", post_verified);
  var activity = Belt_Option.map($$event.body, $$Object.fromString);
  Belt_Option.forEach(activity, (function (x) {
          if (x.TAG === /* Ok */0) {
            console.log("body:", x._0);
            return ;
          }
          console.log("Can't parse body as an ActivityStream Object:", x._0);
        }));
  var path = $$event.path.slice(Config.functionPath.length);
  console.log("API path:", path);
  var match = $$event.httpMethod;
  if (match === "GET") {
    if (path === "/actor") {
      return Handle.actor($$event);
    } else {
      return {
              statusCode: 501
            };
    }
  }
  if (match !== "POST") {
    return {
            statusCode: 501
          };
  }
  if (!post_verified) {
    return {
            statusCode: 401
          };
  }
  if (path !== "/inbox") {
    return {
            statusCode: 501
          };
  }
  if (activity === undefined) {
    return {
            statusCode: 501
          };
  }
  if (activity.TAG !== /* Ok */0) {
    return {
            statusCode: 501
          };
  }
  var act = activity._0;
  var match$1 = act.type;
  if (match$1 === "Follow") {
    return await Handle.follow(act);
  } else if (match$1 === "Create") {
    return await Handle.create(act);
  } else if (match$1 === "Like") {
    return await Handle.like(act);
  } else if (match$1 === "Undo") {
    return await Handle.undo(act);
  } else {
    return {
            statusCode: 501
          };
  }
}

exports.handler = handler;
/* Config Not a pure module */
