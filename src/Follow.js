// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fetch from "./Fetch.js";
import * as Config from "./Config.js";
import * as Egress from "./Egress.js";
import * as Nodeurl from "node:url";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Js_promise2 from "rescript/lib/es6/js_promise2.js";
import * as Nodecrypto from "node:crypto";

async function main(param) {
  var actors = ["https://dvd.chat/users/9gt1gfwbnibzwcur"];
  var inboxes = await Promise.all(actors.map(Fetch.fetchInbox));
  var pairs = Belt_Array.keepMap(Belt_Array.zip(actors, inboxes), (function (param) {
          var opt = param[1];
          if (opt !== undefined) {
            return [
                    param[0],
                    opt
                  ];
          }
          
        }));
  return await Promise.all(pairs.map(function (param) {
                  var inbox = param[1];
                  console.log("Sending to", inbox);
                  var url = new Nodeurl.URL(inbox);
                  return Egress.post(url.host, url.pathname, {
                              id: Config.actor + "/follow/" + Nodecrypto.randomUUID(),
                              type: "Follow",
                              actor: Config.actor,
                              object: Caml_option.some(param[0])
                            });
                }));
}

Js_promise2.then(main(undefined), (function (res) {
        console.log(res);
        return Promise.resolve(undefined);
      }));

export {
  main ,
}
/*  Not a pure module */
